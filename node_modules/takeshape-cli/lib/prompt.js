"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.prompt = prompt;
exports.confirm = confirm;
exports.promptList = promptList;

var _inquirer = _interopRequireDefault(require("inquirer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function prompt(options) {
  return _inquirer.default.prompt(options);
}

function confirm(_x) {
  return _confirm.apply(this, arguments);
}

function _confirm() {
  _confirm = _asyncToGenerator(function* (message) {
    const {
      isConfirmed
    } = yield prompt({
      type: 'confirm',
      name: 'isConfirmed',
      message
    });
    return isConfirmed;
  });
  return _confirm.apply(this, arguments);
}

function promptList(_x2, _x3) {
  return _promptList.apply(this, arguments);
}

function _promptList() {
  _promptList = _asyncToGenerator(function* (message, choices) {
    const {
      id
    } = yield prompt({
      type: 'list',
      name: 'id',
      message,
      choices
    });
    return choices.find(choice => choice.value === id);
  });
  return _promptList.apply(this, arguments);
}