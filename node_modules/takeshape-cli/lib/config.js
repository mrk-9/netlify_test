"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadConfig = loadConfig;

var _fsExtra = _interopRequireDefault(require("fs-extra"));

var _path = _interopRequireDefault(require("path"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function loadConfig(cwd, cli) {
  let config = {};

  const configPath = _path.default.join(cwd, '.tsgrc');

  if (_fsExtra.default.existsSync(configPath)) {
    config = _fsExtra.default.readJsonSync(configPath);
  }

  return {
    buildPath: _path.default.join(cwd, cli.flags.output || 'build'),
    configFilePath: _path.default.join(cwd, cli.flags.file || 'tsg.yml'),
    appUrl: process.env.TS_APP_URL || config.appUrl || 'https://app.takeshape.io',
    endpoint: process.env.TS_API_ENDPOINT || config.endpoint || 'https://api.takeshape.io',
    authToken: cli.flags.token || process.env.TS_AUTH_TOKEN || config.authToken,
    siteId: cli.flags.site || process.env.TS_SITE_ID || config.siteId,
    projectName: process.env.TS_PROJECT_NAME || config.projectName,
    projectId: process.env.TS_PROJECT_ID || config.projectId,
    siteName: process.env.TS_SITE_NAME || config.siteName,
    cache: Boolean(cli.flags.cache),
    watchContent: Boolean(cli.flags.watchContent)
  };
}