#!/usr/bin/env node
"use strict";

var _meow = _interopRequireDefault(require("meow"));

var _main = _interopRequireDefault(require("./main"));

var _config = require("./config");

var _checkVersion = require("./check-version");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const help = `
    Usage
      $ tsg <comand>
    
    Commands
      init
      build
      watch
      schema
      status

    Options
      --token,         -t  TakeShape API auth token
      --site,          -s  TakeShape static site id
      --file,          -f  path to tsg.yml
      --output,        -o  build output path
      --endpoint,      -e  endpoint
      --version,       -v  tsg version number
      --cache          -c  use file cache (default false)
      --watchContent,  -W  rebuild on content change (watch only)

    Examples
      $ tsg build --file path/to/tsg.yml
    
`;
const minimistOptions = {
  alias: {
    t: 'token',
    s: 'site',
    f: 'file',
    o: 'output',
    e: 'endpoint',
    v: 'version',
    c: 'cache',
    W: 'watchContent'
  }
};
const cli = (0, _meow.default)(help, minimistOptions);
const cwd = process.cwd();
const command = cli.input[0];
(0, _checkVersion.checkVersion)(process.version);
(0, _main.default)(command, (0, _config.loadConfig)(cwd, cli), cli);