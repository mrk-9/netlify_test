"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.copyStatic = copyStatic;
exports.syncStatic = syncStatic;
exports.writePages = writePages;

var _fsExtra = _interopRequireDefault(require("fs-extra"));

var _path = _interopRequireDefault(require("path"));

var _bluebird = _interopRequireDefault(require("bluebird"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function copyStatic(config) {
  return _fsExtra.default.mkdirs(config.buildPath).then(() => _fsExtra.default.copy(config.staticPath, config.buildPath, {
    preserveTimestamps: true
  }));
}

function syncStatic(config) {
  return (event, sourcePath) => {
    const relativePath = sourcePath.replace(config.staticPath, '');

    const destPath = _path.default.join(config.buildPath, relativePath);

    if (event === 'addDir') {
      console.log('tsg watch - copied ' + relativePath);

      _fsExtra.default.mkdirs(destPath);
    } else if (event === 'unlink' || event === 'unlinkDir') {
      console.log('tsg watch - deleted ' + relativePath);

      _fsExtra.default.remove(destPath);
    } else {
      console.log('tsg watch - copied ' + relativePath);

      _fsExtra.default.copy(sourcePath, destPath);
    }
  };
}

function writePages(outputPath) {
  return generated => {
    return _bluebird.default.map(generated.pages, page => {
      const filePath = _path.default.join(outputPath, page.path);

      return _fsExtra.default.mkdirs(_path.default.dirname(filePath)).then(() => _fsExtra.default.writeFile(filePath, page.contents, 'utf8'));
    }).then(() => generated.stats);
  };
}