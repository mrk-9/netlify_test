"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.attemptLogin = attemptLogin;
exports.attemptOpenForgotPassword = attemptOpenForgotPassword;
exports.askLogin = askLogin;
exports.loginQuestions = void 0;

var _opn = _interopRequireDefault(require("opn"));

var _prompt = require("../../prompt");

var _emailValidator = require("email-validator");

var _saga = require("../../saga");

var _auth = require("../../auth");

var _messages = require("./messages");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const loginQuestions = [{
  type: 'input',
  name: 'email',
  message: 'Enter your TakeShape email:',

  validate(input) {
    return (0, _emailValidator.validate)(input) || 'Please enter a valid email';
  }

}, {
  type: 'password',
  name: 'password',
  message: 'Enter your TakeShape password:'
}];
exports.loginQuestions = loginQuestions;

function* attemptLogin(params) {
  const answers = yield (0, _saga.call)(_prompt.prompt, loginQuestions);
  return yield (0, _saga.call)(_auth.login, params.endpoint, answers.email, answers.password);
}

function* attemptOpenForgotPassword(params) {
  const isConfirmed = yield (0, _saga.call)(_prompt.confirm, 'Would you like to open TakeShape to set a password?');

  if (isConfirmed) {
    yield (0, _saga.call)(_opn.default, params.appUrl + '/forgot-password', {
      wait: false
    });
  }
}

function* askLogin(params, maxAttempts) {
  let attempts = 0;

  do {
    attempts++;

    try {
      return yield (0, _saga.call)(attemptLogin, params);
    } catch (e) {
      if (e.statusCode === 403) {
        attempts--; // don't count as an attempt

        yield (0, _saga.call)(_messages.missingPasswordMsg);
        yield (0, _saga.call)(attemptOpenForgotPassword, params);
      } else {
        yield (0, _saga.call)(_messages.invalidLoginMsg);
      }
    }
  } while (attempts < maxAttempts);

  yield (0, _saga.call)(_messages.forgotPasswordWarning, params);
}