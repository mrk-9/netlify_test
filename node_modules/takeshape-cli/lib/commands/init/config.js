"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.writeConfigs = writeConfigs;

var _saga = require("../../saga");

var _messages = require("./messages");

var _graphql = require("../../graphql");

var _fsExtra = _interopRequireDefault(require("fs-extra"));

var _api = require("../../util/api");

var _connector = require("../../util/connector");

var _getClientSchema = _interopRequireDefault(require("../../util/get-client-schema"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function* writeConfigs(params, authToken, project, site = {}) {
  yield (0, _saga.call)(_messages.writingFilesMsg);
  yield (0, _saga.call)(_messages.consoleWarning);
  const graphqlEndpoint = (0, _graphql.getGraphQLEndpoint)(params, project.value);
  const tsgrc = {
    authToken,
    projectId: project.value,
    siteId: site.value,
    siteName: site.name,
    endpoint: params.endpoint,
    appUrl: params.appUrl,
    projectName: project.name
  };
  const options = {
    headers: _objectSpread({
      'Content-Type': 'application/json'
    }, (0, _api.getAuthHeader)(authToken)),
    introspect: true
  };
  const graphqlConfigJson = {
    schemaPath: 'tsg-project.graphql',
    includes: ['**/*.graphql'],
    excludes: ['node_modules/**/*.graphql'],
    extensions: {
      endpoints: {
        TakeShape: _objectSpread({
          url: graphqlEndpoint
        }, options)
      }
    }
  };
  yield (0, _saga.all)([(0, _saga.call)(_fsExtra.default.writeJSON, '.graphqlconfig', graphqlConfigJson), (0, _saga.call)(_fsExtra.default.writeJSON, '.tsgrc', tsgrc)]);
  yield (0, _saga.call)(_getClientSchema.default, (0, _connector.createConnector)(_objectSpread({}, params, tsgrc), {
    cache: false
  }));
}