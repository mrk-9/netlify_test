export interface GraphQLQueryConfig {
    query: string;
    variables?: {
        [name: string]: any;
    };
}
export interface ContextConfig {
    [name: string]: string | GraphQLQueryConfig | ContextConfig;
}
export interface PaginateConfig {
    template: string;
    pageSize?: number;
    firstPage?: string;
    path?: string;
    data?: string | GraphQLQueryConfig;
    itemName?: string;
}
export interface RouteConfig {
    path: string;
    template: string;
    context?: ContextConfig;
    paginate?: PaginateConfig;
}
export interface DateFilter {
    tz?: string;
    format?: string;
}
export interface Config {
    env: {
        [name: string]: string;
    };
    context?: ContextConfig;
    routes: {
        [name: string]: RouteConfig;
    };
    imageBaseUrl: string;
    assetBaseUrl: string;
    imageDefaults: {
        [name: string]: string;
    };
    locale: string;
    pathPrefix: string;
    configFilePath: string;
    cwd: string;
    templatePath: string;
    buildPath: string;
    staticPath: string;
    dates: DateFilter;
    usageStats: boolean;
}
export declare function prepareConfig(configFilePath: string, config: Partial<Config>, envConfig?: Partial<Config>): Config;
export declare function loadConfig(configFilePath: string, envConfig: Partial<Config>): Config;
