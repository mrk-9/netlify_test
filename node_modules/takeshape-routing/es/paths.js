import slug from 'slugg';
import get from 'lodash/get';
import toPath from 'lodash/toPath';
import curry from 'lodash/curry';
const nameGroup = '([a-zA-Z][a-zA-Z0-9.]*)';
const variableRegex = new RegExp(':' + nameGroup + '|{' + nameGroup + '}', 'g');
// eslint-disable-line @typescript-eslint/no-explicit-any
export function formatPath(pathStr, data) {
  const result = {
    warnings: [],
    path: ''
  };
  result.path = pathStr.replace(variableRegex, (_, colon, curly) => {
    const type = typeof data;
    const propPath = colon || curly;

    if (type === 'object') {
      const value = String(get(data, propPath) || '');

      if (value === '') {
        result.warnings.push(propPath);
      }

      return slug(value);
    }

    if (propPath === 'num' || propPath === 'value') {
      return slug(String(data));
    }

    result.warnings.push(propPath);
    return '';
  });
  return result;
}
export const route = curry((config, routeName, data) => {
  const path = get(config, ['routes'].concat(toPath(routeName), 'path'));
  return formatPath(path, data).path;
});